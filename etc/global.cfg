# Data access in playback context
msrtsimul = true
plugins.mseedfifo.fifo = @ROOTDIR@/var/run/seedlink/mseedfifo

# Name of the recordstream service implementation.
recordstream.service = combined

# Service specific parameters like a IP address or a file name to use.
recordstream.source = slink/rtserve.iris.washington.edu;fdsnws/fdsnws.raspberryshakedata.com/fdsnws/dataselect/1/query

# A regular expression of all clients that should handle a command message
# usually send to the GUI messaging group. Currently this flag is only used by
# GUI applications to set an artificial origin and to tell other clients to
# show this origin. To let all connected clients handle the command, ".*$" can
# be used.
commands.target = ".*$"
map.layers.events.visible = true

# SeisComP ships with the rectangular projection built-in. Other projections
# may be provided through plugins.
scheme.map.projection = Mercator

# The color of lines in the map (e.g. lines connecting the origin and a
# station).
scheme.colors.map.lines = black

# The color of station outlines in the map.
scheme.colors.map.outlines = black

# Setting this parameter to true will not interpolate between the depth steps
# and the color for a depth <= input is used.
scheme.colors.originSymbol.depth.discrete = false

eventlist.filter.types.blacklist = "not existing", "other", "not locatable", "outside of network interest"
# Define a list of available regions
eventlist.regions = A,B,C,D
eventlist.region.A.name = "ECOS"
# latmin,lonmin, latmax, lonmax
eventlist.region.A.rect = 45.6,5.6,48.3,11.1
eventlist.region.B.name = "Sankt Gallen"
eventlist.region.B.rect = 47,9,47.5,9.5
eventlist.region.C.name = "AlpTransit"
eventlist.region.C.rect = 46.5,8,47,9.5
eventlist.region.D.name = "Diemtigen"
eventlist.region.D.rect = 46.56,7.41,46.74,7.68
# Set default state of "Hide events outside region" to true
# and use the first region in the list.
eventlist.hideRegions.default = true

# The precision of lat/lon values.
scheme.precision.location = 4

# The precision of pick times.
scheme.precision.pickTime = 2

# Precision of RMS values.
scheme.precision.rms = 2

# Display distances in km?
scheme.unit.distanceInKM = true

amplitudePicker.filters = "hp 4p 2s (1.3<M<2.5);BW_HP(4,.5)", "hp 4p 2hz (M<1.3);BW_HP(4,2)"

# Configures the default filters selectable in manual picker. The entry with a
# leading "@" is selected as default filter.
picker.filters = "@BP 2pole 1-30Hz;RMHP(4)->ITAPER(12)->BW_BP(2,1,30)",\
                 "BP 0.1 - 1 Hz  3rd order;RMHP(10)->ITAPER(30)->BW(3,0.1,1)",\
                 "BP 0.1 - 2 Hz  3rd order;RMHP(10)->ITAPER(30)->BW(3,0.1,2)",\
                 "BP 0.4 - 1 Hz  3rd order;RMHP(10)->ITAPER(30)->BW(3,0.4,1)",\
                 "BP 0.7 - 2 Hz  3rd order;RMHP(10)->ITAPER(30)->BW(3,0.7,2)",\
                 "BP 1 - 3 Hz  3rd order;RMHP(10)->ITAPER(30)->BW(3,1.0,3)",\
                 "BP 2 - 4 Hz  3rd order;RMHP(10)->ITAPER(30)->BW(3,2.0,4)",\
                 "BP 3 - 6 Hz  3rd order;RMHP(10)->ITAPER(30)->BW(3,3.0,6)",\
                 "BP 4 - 8 Hz  3rd order;RMHP(10)->ITAPER(30)->BW(3,4.0,8)",\
                 "BP 1 - 5 Hz  3rd order;RMHP(10)->ITAPER(30)->BW(3,1.0,5)",\
                 "HP 3 Hz  3rd order;RMHP(10)->ITAPER(30)->BW_HP(3,3)",\
                 "BP 0.7 - 2 Hz + STA/LTA(1,50);RMHP(10)->ITAPER(30)->BW(3,0.7,2)->STALTA(1,50)"
